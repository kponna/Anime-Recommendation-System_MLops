name: Anime Recommender CI/CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  contents: read
  packages: write

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository (Add a real linter here)"

      - name: Run unit tests
        run: echo "Running unit tests (Add actual tests here)"

  build-and-push-docker-image:
    name: Build and Push to GHCR
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and tag Docker image
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/streamlit-app"
          docker build -t $IMAGE_NAME:latest .
          

      - name: Push Docker image to GHCR
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/streamlit-app"
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}

  deploy:
    name: Deploy to Self-Hosted Runner
    needs: build-and-push-docker-image
    runs-on: self-hosted
    steps:
      - name: Pull latest image from GHCR
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/streamlit-app"
          docker pull $IMAGE_NAME:latest

      - name: Stop and remove existing container
        run: |
          docker ps -a --filter "name=streamlit-container-new" --quiet | xargs -I {} docker rm -f {}

      - name: Run new container
        run: |
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/streamlit-app"
          docker run -d -p 8501:8501 --name streamlit-container-new $IMAGE_NAME:latest